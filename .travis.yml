env:
  global:
    - ANDROID_PACKAGE="app-debug.apk"
    - ANDROID_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/demo/platforms/android/app/build/outputs/apk/debug
    - ANDROID_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$ANDROID_PACKAGE?overwrite=true"
    - IOS_PACKAGE="bubblenavigation.zip"
    - IOS_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/demo/platforms/ios/build/emulator
    - IOS_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$IOS_PACKAGE?overwrite=true"

git:
  depth: 1

branches:
  only: 
    - master

matrix:
  include:
    - stage: "Lint"
      language: node_js
      os: linux
      node_js: "8"
      script: cd src && npm run ci.tslint && cd ../demo && npm run ci.tslint && cd ../demo-ng && npm run ci.tslint
    - stage: "WebPack, Build"
      os: osx
      env:
        - WebPack="iOS"
        - Type="VanillaJS"
      osx_image: xcode10.0
      language: node_js 
      node_js: "8"
      jdk: oraclejdk8
      script: 
        - cd demo && npm run build.plugin && npm i && tns build ios --bundle --env.uglify --copy-to "./outputs/demo.app"
        - ls -l
    - os: osx
      env:
        - WebPack="iOS"
        - Type="Angular"
      osx_image: xcode10.0
      language: node_js 
      node_js: "8"
      jdk: oraclejdk8
      script: 
        - cd src && npm run build && npm pack
        - cd ../demo-ng && tns plugin add ../src/*.tgz
        - npm i && tns build ios --bundle --env.uglify
    - language: android
      os: linux
      env:
        - WebPack="Android"
        - Type="VanillaJS"
      jdk: oraclejdk8
      before_install: nvm install 8
      script: 
        - cd demo && npm run build.plugin && npm i && tns build android --bundle --env.uglify --env.snapshot --copy-to "./outputs/app-debug.apk"
        - ls -l
    - language: android
      os: linux
      env:
        - WebPack="Android"
        - Type="Angular"
      jdk: oraclejdk8
      before_install: nvm install 8
      script: 
        - cd src && npm run build
        - cd ../publish && sh pack.sh
        - cd ../demo-ng && tns plugin add ../publish/package/*.tgz
        - npm i && tns build android --bundle --env.uglify --env.snapshot
    - language: android
      env: 
        - BuildAndroid="28"
        - Type="VanillaJS"
      os: linux
      jdk: oraclejdk8
      before_install: nvm install stable
      script:
        - cd demo && npm run ci.android.build
    - language: android
      env: 
        - BuildAndroid="28"
        - Type="Angular"
      os: linux
      jdk: oraclejdk8
      before_install: nvm install stable
      script:
        - cd demo-ng && npm run ci.android.build
    - os: osx
      env: 
        - BuildiOS="12"
        - Xcode="10.0"
        - Type="VanillaJS"
      osx_image: xcode10.0
      language: node_js 
      node_js: "8"
      jdk: oraclejdk8
      script: 
        - cd demo && npm run ci.ios.build
    - os: osx
      env: 
        - BuildiOS="12"
        - Xcode="10.0"
        - Type="Angular"
      osx_image: xcode10.0
      language: node_js 
      node_js: "8"
      jdk: oraclejdk8
      script: 
        - cd demo-ng && npm run ci.ios.build

android:
  components:
    - tools
    - platform-tools
    - build-tools-28.0.3
    - android-28
    - android-23
    - extra-android-m2repository

before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
    directories:
        - .nvm
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/
        
before_install:
    - sudo pip install --upgrade pip
    - sudo pip install six

install:
    - echo no | npm install -g nativescript
    - tns usage-reporting disable
    - tns error-reporting disable